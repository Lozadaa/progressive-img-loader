{"version":3,"sources":["../../src/utils/Utils.js","../../src/styles.js","../../src/components/styles.js","../../src/components/Image.jsx","../../src/index.js","App.js","index.js"],"names":["loadImage","src","callback","image","useStyles","makeStyles","defaultImageClass","width","height","loading","filter","Image","props","alt","transitionTime","className","isPreview","CustomImageComponent","classes","classPreview","play","duration","start","end","clsx","ImageLoader","srcPreview","loader","customImageComponent","useState","originalImage","setOriginalImage","previewImage","setPreviewImage","useEffect","Utils","isPreloader","isPossibleLoadThumbnail","PropTypes","string","App","Fragment","Avatar","ReactDOM","render","document","getElementById"],"mappings":"mTAAO,SAASA,EAAUC,EAAKC,GAC7B,KAAO,CACL,IAAIC,EAAQ,IAAZ,MACAA,SAAe,WACb,GACED,MAGJC,SCNG,IAAMC,EAAYC,KAAW,kBAAY,CAE9CC,kBAAmB,CACjBC,MADiB,QAEjBC,OAAQ,aCJCJ,EAAYC,KAAW,kBAAY,CAC9CI,QAAS,CACPC,OAAQ,kBCECC,EAAQ,SAACC,GAAU,IACvBX,EAA4EW,EADrD,IAClBC,EAAuED,EADrD,MACqDA,EADrD,eACbE,OADa,UACOC,EAA8CH,EADrD,UACkBI,EAAmCJ,EADrD,UAC6BK,EAAwBL,EADrD,qBAExBM,EAAUd,IACVe,EAAeH,EAAYE,EAAH,QAA9B,GAGA,OACE,kBAAC,IAAD,cACE,6BACEE,MADF,EAEEC,SAFF,EAGEC,MAPiB,CAACZ,OAAQ,aAQ1Ba,IAPoB,CAACb,OAAQ,YAU3BO,GAAwB,qBAAsBhB,IAAtB,EAAgCY,IAAhC,EAA0CE,UAAWS,YAAKL,EAAcJ,MAG/FE,GAAwB,yBAAKhB,IAAL,EAAeY,IAAf,EAAyBE,UAAWS,YAAKL,EAAcJ,QClB7EU,EAAc,SAACb,GAAU,IAC5BX,EAAkEW,EADtC,IACvBc,EAA6Dd,EADtC,WACXC,EAAiDD,EADtC,IACNe,EAA4Cf,EADtC,OACEG,EAAoCH,EADtC,UACagB,EAAyBhB,EADtC,uBAEMiB,mBAFN,MAE7BC,EAF6B,KAEdC,EAFc,OAGIF,mBAHJ,MAG7BG,EAH6B,KAGfC,EAHe,KAI9Bf,EAAUd,IAChB8B,qBAAU,WACR,GACEC,KAA4B,mBAASF,EAAT,MAE9B,GACEE,KAAqB,mBAASJ,EAAT,QALzBG,IAUA,IAAME,GAAeJ,IAAD,GAApB,EACMK,EAA0BL,IAAhC,EAEA,OACE,kBAAC,IAAD,cACMI,GADN,EAEMC,GAA2B,qBAAOxB,IAAP,EAAiBZ,IAAjB,EACOe,WADP,EAEOC,qBAFP,EAGOF,UAAWA,GAAwBG,EAAQZ,oBAG7EwB,GAAiB,qBAAOjB,IAAP,EAAiBZ,IAAjB,EACOe,WADP,EAEOC,qBAFP,EAGOF,UAAWA,GAAwBG,EAAQZ,sBAO7EmB,YAAwB,CACtBxB,IAAKqC,WADiB,WAEtBZ,WAAYY,IAFU,OAGtBX,OAAQW,IAHc,QAItBzB,IAAKyB,IAJiB,OAKtBvB,UAAWuB,IAAUC,Q,aCjCRC,MAVH,IAEV,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAaxC,IAAI,wNACGyB,WAAW,wNAClBE,qBAAsBc,OCJvCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c1d41999.chunk.js","sourcesContent":["export function loadImage(src, callback){\n  if(src){\n    let image = new Image();\n    image.onload = function () {\n      if(callback){\n        callback(src);\n      }\n    }\n    image.src = src;\n  }\n}\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n\n  defaultImageClass: {\n    width: \"300px\",\n    height: \"300px\"\n  }\n}));\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  loading: {\n    filter: \"blur(20px)\"\n  }\n}));\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./styles\";\nimport clsx from \"clsx\";\nimport {Animate} from \"react-simple-animate\";\n\nexport const Image = (props) => {\n  const {src, alt, transitionTime = 2, className, isPreview, CustomImageComponent} = props;\n  const classes = useStyles();\n  const classPreview = isPreview ? classes.loading : '';\n  const filterWithBlur = {filter: 'blur(5px)' };\n  const filterWithoutBlur = {filter: 'blur(0)' };\n  return (\n    <React.Fragment>\n      <Animate\n        play={true}\n        duration={transitionTime}\n        start={filterWithBlur}\n        end={filterWithoutBlur}\n      >\n        { // With their image component\n          CustomImageComponent && <CustomImageComponent src={src} alt={alt} className={clsx(classPreview, className)}/>\n        }\n        { // With our image component\n          !CustomImageComponent && <img src={src} alt={alt} className={clsx(classPreview, className)}/>\n        }\n      </Animate>\n    </React.Fragment>\n  );\n\n}\n\n\n\n","import React, {useEffect, useState} from \"react\";\nimport * as Utils from \"./utils/Utils.js\"\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./styles\";\nimport {Image} from \"./components/Image.jsx\";\n\nexport const ImageLoader = (props) => {\n  const { src, srcPreview, alt, loader, className, customImageComponent } = props;\n  const [originalImage, setOriginalImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if(!previewImage){\n      Utils.loadImage(srcPreview, (src) => setPreviewImage(src));\n    }\n    if(!originalImage){\n      Utils.loadImage(src, (src) => setOriginalImage(src));\n    }\n\n  }, [])\n\n  const isPreloader = !previewImage && !originalImage && loader;\n  const isPossibleLoadThumbnail = previewImage && !originalImage\n\n  return (\n    <React.Fragment>\n        { isPreloader && loader }\n        { isPossibleLoadThumbnail && <Image alt={alt} src={previewImage}\n                                            isPreview={true}\n                                            CustomImageComponent={customImageComponent}\n                                            className={className ? className : classes.defaultImageClass}\n        /> }\n\n        { originalImage && <Image alt={alt} src={originalImage}\n                                  isPreview={false}\n                                  CustomImageComponent={customImageComponent}\n                                  className={className ? className : classes.defaultImageClass}\n        /> }\n    </React.Fragment>\n  );\n\n}\n\nImageLoader.propTypes = {\n  src: PropTypes.string.isRequired,\n  srcPreview: PropTypes.string,\n  loader: PropTypes.element,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n}\n","import React from 'react'\n\nimport { ImageLoader } from 'progressive-img-loader'\nimport {Avatar} from \"@material-ui/core\";\n\nconst App = () => {\n  return (\n  <React.Fragment>\n    <ImageLoader src=\"http://staging.api.nalarocks.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBDQT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4965bcfd51b6dddbb8d6d974991126e20e803634/profile_picture_fabian-min.png\"\n                        srcPreview=\"http://staging.api.nalarocks.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBDQT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4965bcfd51b6dddbb8d6d974991126e20e803634/profile_picture_fabian-min.png\"\n                 customImageComponent={Avatar}/>\n  </React.Fragment>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}