{"version":3,"file":"index.modern.js","sources":["../src/utils/Utils.js","../src/components/Image.jsx","../src/index.js"],"sourcesContent":["export const ERROR = \"ERROR_LOADING_IMAGE\";\n/**\n * This method execute the magic when the image is loaded\n * @param src\n * @param callback\n */\nexport function loadImage(src, callback){\n  if(src){\n    const image = new Image();\n    image.onload = function () {\n      if(callback){\n        callback(src);\n      }\n    }\n    image.onerror = function () {\n      if(callback){\n        callback(ERROR);\n      }\n    }\n    image.src = src;\n    return;\n  }\n  callback(ERROR);\n}\n","import React from 'react'\nimport { Animate } from 'react-simple-animate'\nimport { ERROR } from '../utils/Utils'\n\n/**\n * Custom component to manage logic of the images :)\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport const Image = (props) => {\n  const {\n    src,\n    alt,\n    transitionTime = 1,\n    className,\n    isPreview,\n    CustomImageComponent\n  } = props\n  const transitionTimeError = 0\n  const filterWithBlur = { filter: 'blur(5px)' }\n  const filterWithoutBlur = { filter: 'blur(0)' }\n  const duration = src === ERROR ? transitionTimeError : transitionTime\n  return (\n    <React.Fragment>\n      <Animate\n        play\n        duration={duration}\n        start={filterWithBlur}\n        // if is a preview image we don't wanna remove the blur effect\n        end={isPreview ? filterWithBlur : filterWithoutBlur}\n      >\n        {\n          // With their image component\n          CustomImageComponent && (\n            <CustomImageComponent src={src} alt={alt} className={className} />\n          )\n        }\n        {\n          // With our image component\n          !CustomImageComponent && (\n            <img src={src} alt={alt} className={className} />\n          )\n        }\n      </Animate>\n    </React.Fragment>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport * as Utils from './utils/Utils.js'\nimport PropTypes from 'prop-types'\n\nimport { Image } from './components/Image.jsx'\nimport { useIsMounted } from 'react-tidy'\nimport defaultImg from 'assets/images/default.png'\n\n/**\n * The awesome, magic, beautiful (ðŸ˜›) element that preload blurred your thumb images and then load the\n * original quality image with transition effect to show it!\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport const ImageLoader = (props) => {\n  const {\n    src,\n    srcPreview,\n    alt,\n    loader,\n    className,\n    customImageComponent\n  } = props\n  const [originalImage, setOriginalImage] = useState(null)\n  const [previewImage, setPreviewImage] = useState(null)\n  const isMounted = useIsMounted()\n  useEffect(() => {\n    if (isMounted) {\n      if (!previewImage) {\n        Utils.loadImage(srcPreview, (src) => setPreviewImage(src))\n      }\n      if (!originalImage) {\n        Utils.loadImage(src, (src) => setOriginalImage(src))\n      }\n    }\n  }, [])\n\n  const isLoading = !previewImage && !originalImage && !loader\n  const isLoadingWithPreloader = !previewImage && !originalImage && loader\n  const isPossibleLoadThumbnail = previewImage && !originalImage\n\n  return (\n    <React.Fragment>\n      {isLoadingWithPreloader && loader}\n      {isLoading && <customImageComponent src={defaultImg} />}\n      {isPossibleLoadThumbnail && (\n        <Image\n          alt={alt}\n          src={previewImage}\n          isPreview\n          CustomImageComponent={customImageComponent}\n          className={className}\n        />\n      )}\n      {originalImage && (\n        <Image\n          alt={alt}\n          src={originalImage}\n          isPreview={false}\n          CustomImageComponent={customImageComponent}\n          className={className}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nImageLoader.propTypes = {\n  src: PropTypes.string,\n  srcPreview: PropTypes.string,\n  loader: PropTypes.element,\n  alt: PropTypes.string,\n  className: PropTypes.string\n}\n"],"names":["ERROR","loadImage","src","callback","image","Image","onload","onerror","props","alt","transitionTime","className","isPreview","CustomImageComponent","transitionTimeError","filterWithBlur","filter","filterWithoutBlur","duration","ImageLoader","srcPreview","loader","customImageComponent","useState","originalImage","setOriginalImage","previewImage","setPreviewImage","isMounted","useIsMounted","useEffect","Utils","isLoading","isLoadingWithPreloader","isPossibleLoadThumbnail","defaultImg","propTypes","PropTypes","string","element"],"mappings":"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"}