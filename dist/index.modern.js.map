{"version":3,"file":"index.modern.js","sources":["../src/utils/Utils.js","../src/components/Image.jsx","../src/index.js"],"sourcesContent":["export const ERROR = \"ERROR_LOADING_IMAGE\";\n/**\n * This method execute the magic when the image is loaded\n * @param src\n * @param callback\n */\nexport function loadImage(src, callback){\n  if(src){\n    const image = new Image();\n    image.onload = function () {\n      if(callback){\n        callback(src);\n      }\n    }\n    image.onerror = function () {\n      if(callback){\n        callback(ERROR);\n      }\n    }\n    image.src = src;\n    return;\n  }\n  callback(ERROR);\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {Animate} from \"react-simple-animate\";\nimport {ERROR} from \"../utils/Utils\";\n\n/**\n * Custom component to manage logic of the images :)\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport const Image = (props) => {\n  const {src, alt, transitionTime = 1, className, isPreview, CustomImageComponent} = props;\n  const transitionTimeError = 0;\n  const filterWithBlur = {filter: 'blur(5px)'};\n  const filterWithoutBlur = {filter: 'blur(0)'};\n  const duration = src === ERROR ? transitionTimeError : transitionTime;\n  return (\n    <React.Fragment>\n      <Animate\n        play={true}\n        duration={duration}\n        start={filterWithBlur}\n        // if is a preview image we don't wanna remove the blur effect\n        end={isPreview ? filterWithBlur : filterWithoutBlur}\n      >\n        { // With their image component\n          CustomImageComponent && <CustomImageComponent src={src} alt={alt} className={className}/>\n        }\n        { // With our image component\n          !CustomImageComponent && <img src={src} alt={alt} className={className}/>\n        }\n      </Animate>\n    </React.Fragment>\n  );\n\n}\n\n\n\n","import React, {useEffect, useState} from \"react\";\nimport * as Utils from \"./utils/Utils.js\"\nimport PropTypes from \"prop-types\";\n\nimport {Image} from \"./components/Image.jsx\";\n\n/**\n * The awesome, magic, beautiful (ðŸ˜›) element that preload blurred your thumb images and then load the\n * original quality image with transition effect to show it!\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport const ImageLoader = (props) => {\n  const { src, srcPreview, alt, loader, className, customImageComponent } = props;\n  const [originalImage, setOriginalImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  useEffect(() => {\n    if(!previewImage){\n      Utils.loadImage(srcPreview, (src) => setPreviewImage(src));\n    }\n    if(!originalImage){\n      Utils.loadImage(src, (src) => setOriginalImage(src));\n    }\n\n  }, [])\n\n  const isPreloader = !previewImage && !originalImage && loader;\n  const isPossibleLoadThumbnail = previewImage && !originalImage\n\n  return (\n    <React.Fragment>\n        { isPreloader && loader }\n        { isPossibleLoadThumbnail && <Image alt={alt}\n                                            src={previewImage}\n                                            isPreview={true}\n                                            CustomImageComponent={customImageComponent}\n                                            className={className}\n        /> }\n        { originalImage && <Image alt={alt}\n                                  src={originalImage}\n                                  isPreview={false}\n                                  CustomImageComponent={customImageComponent}\n                                  className={className}\n        /> }\n    </React.Fragment>\n  );\n\n}\n\nImageLoader.propTypes = {\n  src: PropTypes.string,\n  srcPreview: PropTypes.string,\n  loader: PropTypes.element,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n}\n"],"names":["ERROR","loadImage","src","callback","image","Image","onload","onerror","props","alt","transitionTime","className","isPreview","CustomImageComponent","transitionTimeError","filterWithBlur","filter","filterWithoutBlur","duration","ImageLoader","srcPreview","loader","customImageComponent","useState","originalImage","setOriginalImage","previewImage","setPreviewImage","useEffect","Utils","isPreloader","isPossibleLoadThumbnail","propTypes","PropTypes","string","element"],"mappings":";;;;;AAAO,IAAMA,KAAK,GAAG,qBAAd;AAMA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAiC;AACtC,MAAGD,GAAH,EAAO;AACL,QAAME,KAAK,GAAG,IAAIC,KAAJ,EAAd;;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe,YAAY;AACzB,UAAGH,QAAH,EAAY;AACVA,QAAAA,QAAQ,CAACD,GAAD,CAAR;AACD;AACF,KAJD;;AAKAE,IAAAA,KAAK,CAACG,OAAN,GAAgB,YAAY;AAC1B,UAAGJ,QAAH,EAAY;AACVA,QAAAA,QAAQ,CAACH,KAAD,CAAR;AACD;AACF,KAJD;;AAKAI,IAAAA,KAAK,CAACF,GAAN,GAAYA,GAAZ;AACA;AACD;;AACDC,EAAAA,QAAQ,CAACH,KAAD,CAAR;AACD;;ACZM,IAAMK,OAAK,GAAG,SAARA,KAAQ,CAACG,KAAD,EAAW;AAAA,MACvBN,GADuB,GACqDM,KADrD,CACvBN,GADuB;AAAA,MAClBO,GADkB,GACqDD,KADrD,CAClBC,GADkB;AAAA,8BACqDD,KADrD,CACbE,cADa;AAAA,MACbA,cADa,sCACI,CADJ;AAAA,MACOC,SADP,GACqDH,KADrD,CACOG,SADP;AAAA,MACkBC,SADlB,GACqDJ,KADrD,CACkBI,SADlB;AAAA,MAC6BC,oBAD7B,GACqDL,KADrD,CAC6BK,oBAD7B;AAE9B,MAAMC,mBAAmB,GAAG,CAA5B;AACA,MAAMC,cAAc,GAAG;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAvB;AACA,MAAMC,iBAAiB,GAAG;AAACD,IAAAA,MAAM,EAAE;AAAT,GAA1B;AACA,MAAME,QAAQ,GAAGhB,GAAG,KAAKF,KAAR,GAAgBc,mBAAhB,GAAsCJ,cAAvD;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,QAAQ,EAAEQ,QAFZ;AAGE,IAAA,KAAK,EAAEH,cAHT;AAKE,IAAA,GAAG,EAAEH,SAAS,GAAGG,cAAH,GAAoBE;AALpC,KAQIJ,oBAAoB,iBAAI,oBAAC,oBAAD;AAAsB,IAAA,GAAG,EAAEX,GAA3B;AAAgC,IAAA,GAAG,EAAEO,GAArC;AAA0C,IAAA,SAAS,EAAEE;AAArD,IAR5B,EAWI,CAACE,oBAAD,iBAAyB;AAAK,IAAA,GAAG,EAAEX,GAAV;AAAe,IAAA,GAAG,EAAEO,GAApB;AAAyB,IAAA,SAAS,EAAEE;AAApC,IAX7B,CADF,CADF;AAmBD,CAzBM;;ICEMQ,WAAW,GAAG,SAAdA,WAAc,CAACX,KAAD,EAAW;AAAA,MAC5BN,GAD4B,GACsCM,KADtC,CAC5BN,GAD4B;AAAA,MACvBkB,UADuB,GACsCZ,KADtC,CACvBY,UADuB;AAAA,MACXX,GADW,GACsCD,KADtC,CACXC,GADW;AAAA,MACNY,MADM,GACsCb,KADtC,CACNa,MADM;AAAA,MACEV,SADF,GACsCH,KADtC,CACEG,SADF;AAAA,MACaW,oBADb,GACsCd,KADtC,CACac,oBADb;;AAAA,kBAEMC,QAAQ,CAAC,IAAD,CAFd;AAAA,MAE7BC,aAF6B;AAAA,MAEdC,gBAFc;;AAAA,mBAGIF,QAAQ,CAAC,IAAD,CAHZ;AAAA,MAG7BG,YAH6B;AAAA,MAGfC,eAHe;;AAIpCC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAG,CAACF,YAAJ,EAAiB;AACfG,MAAAA,SAAA,CAAgBT,UAAhB,EAA4B,UAAClB,GAAD;AAAA,eAASyB,eAAe,CAACzB,GAAD,CAAxB;AAAA,OAA5B;AACD;;AACD,QAAG,CAACsB,aAAJ,EAAkB;AAChBK,MAAAA,SAAA,CAAgB3B,GAAhB,EAAqB,UAACA,GAAD;AAAA,eAASuB,gBAAgB,CAACvB,GAAD,CAAzB;AAAA,OAArB;AACD;AAEF,GARQ,EAQN,EARM,CAAT;AAUA,MAAM4B,WAAW,GAAG,CAACJ,YAAD,IAAiB,CAACF,aAAlB,IAAmCH,MAAvD;AACA,MAAMU,uBAAuB,GAAGL,YAAY,IAAI,CAACF,aAAjD;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP,QACMM,WAAW,IAAIT,MADrB,EAEMU,uBAAuB,iBAAI,oBAAC1B,OAAD;AAAO,IAAA,GAAG,EAAEI,GAAZ;AACO,IAAA,GAAG,EAAEiB,YADZ;AAEO,IAAA,SAAS,EAAE,IAFlB;AAGO,IAAA,oBAAoB,EAAEJ,oBAH7B;AAIO,IAAA,SAAS,EAAEX;AAJlB,IAFjC,EAQMa,aAAa,iBAAI,oBAACnB,OAAD;AAAO,IAAA,GAAG,EAAEI,GAAZ;AACO,IAAA,GAAG,EAAEe,aADZ;AAEO,IAAA,SAAS,EAAE,KAFlB;AAGO,IAAA,oBAAoB,EAAEF,oBAH7B;AAIO,IAAA,SAAS,EAAEX;AAJlB,IARvB,CADF;AAkBD,CAnCM;AAqCPQ,WAAW,CAACa,SAAZ,GAAwB;AACtB9B,EAAAA,GAAG,EAAE+B,SAAS,CAACC,MADO;AAEtBd,EAAAA,UAAU,EAAEa,SAAS,CAACC,MAFA;AAGtBb,EAAAA,MAAM,EAAEY,SAAS,CAACE,OAHI;AAItB1B,EAAAA,GAAG,EAAEwB,SAAS,CAACC,MAJO;AAKtBvB,EAAAA,SAAS,EAAEsB,SAAS,CAACC;AALC,CAAxB;;;;"}